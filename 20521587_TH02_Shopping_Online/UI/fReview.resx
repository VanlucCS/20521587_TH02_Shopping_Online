<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>